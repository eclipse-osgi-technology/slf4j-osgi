name: CI Build

on:
  push:
    branches-ignore:
    - 'dependabot/**'
    paths-ignore:
    - '.github/**/*codeql*'
    - '.github/*.yml'
  pull_request:
    paths-ignore:
    - '.github/**/*codeql*'
    - '.github/*.yml'

env:
  LC_ALL: en_US.UTF-8

defaults:
  run:
    shell: bash

jobs:
  JDK_Matrix:
    strategy:
      matrix:
        java: [ '11', '15' ]
        os: [ ubuntu-latest ]
        include:
        - os: ubuntu-latest
          java: '8'
          canonical: ${{ (github.repository == 'osgi/slf4j-osgi') && ((github.ref == 'refs/heads/main') || (github.ref == 'refs/heads/release')) && (github.event_name != 'pull_request') }}
    name: JDK${{ matrix.java }} ${{ matrix.os }} ${{ matrix.mavenopts }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2
    - name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: ${{ matrix.java }}
    - name: Build
      id: build
      continue-on-error: ${{ matrix.experimental }}
      run: |
        ./.github/scripts/build.sh ${{ matrix.mavenopts }}
    - name: Import GPG key
      id: import_gpg
      if: (matrix.canonical && (steps.build.outcome == 'success'))
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
    - name: GPG key information
      if: (steps.import_gpg.outcome == 'success')
      run: |
        echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
        echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
        echo "name:        ${{ steps.import_gpg.outputs.name }}"
        echo "email:       ${{ steps.import_gpg.outputs.email }}"
    - name: Publish
      if: (steps.import_gpg.outcome == 'success')
      run: |
        ./.github/scripts/publish.sh -Possrh
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

